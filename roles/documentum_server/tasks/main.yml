---
- name: Documentum Server required packages
  yum:
    name:  "{{ packages }}"
  vars:
    packages:
    - expect
    - tcl

- name: Documentum Server group
  group:
    name:  "{{ documentum_server.group }}"
    gid:   "{{ documentum_server.gid }}"
    state: present

- name: Documentum server required install account
  user:
    name:  "{{ documentum_server.user }}"
    group: "{{ documentum_server.group }}"
    groups:
       - "{{ oracle.groups.dba }}"
       - "{{ oracle.groups.inventory }}"
  notify:
    - set-password-documentum

# https://wherenow.org/ansible-handlers
- name: Flush Handlers to set Documentum Install Owner password
  meta: flush_handlers

# Ideally I would let the notify task take care of this, but handler is not run if run failure and repository create fails if password not set.
#- name: FORCE set password for Documentum user {{ documentum_server.user }}
#  shell: echo vagrant|passwd --stdin {{ documentum_server.user }}

- name: Documentum Server install location
  file:
    path:     "{{ item }}"
    state:    directory
    recurse:  no
    owner:    "{{ documentum_server.user }}"
    group:    "{{ documentum_server.group }}"
    mode:     u=rwx,g=rx,o=rx
  loop:
    - "{{ documentum_server.documentum }}"
    - "{{ documentum_server.dctm_shared }}"
    - "{{ documentum_server.media.tmpdir }}"

- name: Documentum Server pre-installation tasks for Red Hat Enterprise Linux
  file:
    path:  /usr/lib64/libsasl2.so.2
    src:   /usr/lib64/libsasl2.so.3.0.0
    state: link

- name: Documentum environment global bashrc file /etc/profile.d/documentum_server.sh
  template:
    dest:   /etc/profile.d/documentum_server.sh
    src:    environment.exports.sh
    owner:  root
    group:  root
    mode:   u=rw,g=r,o=r

- name: Documentum environment user bashrc file /home/{{ documentum_server.user }}/.bashrc
  template:
    dest:   /home/{{ documentum_server.user }}/.bashrc
    src:    environment.bashrc.sh
    owner:  "{{ documentum_server.user }}"
    group:  "{{ documentum_server.group }}"
    mode:   u=rw,g=r,o=r

- name: Documentum Server security limits /etc/security/limits.d/documentum_server.conf
  template:
    dest:   /etc/security/limits.d/documentum_server.conf
    src:    security.limits.conf
    owner:  root
    group:  root
    mode:   u=rw,g=r,o=r

- name: Unpack Documentum Server media {{ documentum_server.media.zip }}
  unarchive:
    src:        "{{ documentum_server.media.zip }}"
    dest:       "{{ documentum_server.media.tmpdir }}"
    creates:    "{{ documentum_server.media.tmpdir }}/serverSetup.bin"
    remote_src: yes
    owner:      "{{ documentum_server.user }}"
    group:      "{{ documentum_server.group }}"

- name: Setup script to install Documentum Server software {{ documentum_server.media.tmpdir }}/serverSetup.sh
  template:
    src:    serverSetup.sh
    dest:   "{{ documentum_server.media.tmpdir }}/serverSetup.sh"
    owner:  "{{ documentum_server.user }}"
    group:  "{{ documentum_server.group }}"
    mode:   u=rwx,g=r,o=r

- name: Install Documentum Server software {{ documentum_server.media.tmpdir }}/serverSetup.sh
  shell:        "{{ documentum_server.media.tmpdir }}/serverSetup.sh"
  become:       true
  become_user:  "{{ documentum_server.user }}"
  args:
    executable: /bin/bash
    chdir:      "{{ documentum_server.media.tmpdir }}"
    creates:    "{{ documentum_server.dm_home }}/version.txt"

- name: Open firewall for JMS JBOSS HTTP port
  firewalld:
    port:       9090/tcp
    zone:       public
    permanent:  true
    state:      enabled
    immediate:  yes
