---
- name: Create response file for silent installation
  template:
    dest:  "{{ oracle.media.installer }}/dbca.rsp"
    src:   "dbca.{{ oracle.version }}.rsp"
    owner: "{{ oracle.user }}"
    group: "{{ oracle.groups.inventory }}"
    mode:  u=rw,g=r,o=r

- name: Define Oracle 12c 12.1.0.2 database install command
  set_fact:
    oracle_database_create_command: "{{ oracle.home }}/bin/dbca -silent -responseFile {{ oracle.media.installer }}/dbca.rsp"
  when: oracle.version == "12.1.0.2"

- name: Define Oracle 12c 12.2.0.1 database install command
  set_fact:
    oracle_database_create_command: "{{ oracle.home }}/bin/dbca -createDatabase -silent -ignorePreReqs -responseFile {{ oracle.media.installer }}/dbca.rsp"
  when: oracle.version == "12.2.0.1"

- name: Create Oracle Database {{ oracle.sid }} in {{ oracle_database.data }}
  command:     "{{ oracle_database_create_command }}"
  become:       true
  become_user:  "{{ oracle.user }}"
  args:
    creates:    "{{ oracle_database.data }}"

- name: /etc/oratab - remove default setting to not start on host start up
  lineinfile:
    line:    "{{ oracle.sid}}:{{ oracle.home }}:N"
    path:    /etc/oratab
    state:   absent

- name: /etc/oratab - Set database to start on host start up
  lineinfile:
    line:    "{{ oracle.sid}}:{{ oracle.home }}:Y"
    path:    /etc/oratab

- name: Oracle dbora Service file
  template:
    dest:   /etc/systemd/system/dbora.service
    src:    dbora.service
    owner:  root
    group:  root
    mode:   u=rwx,g=rx,o=rx

- name: Enable the dbora service, also issue daemon-reload to pick up config changes
  systemd:
    name:          dbora
    daemon_reload: yes
    enabled:       yes

- name: Create Message of day file with Oracle details
  template:
    src:   motd.j2
    dest:  /etc/motd
    owner: root
    group: root
    mode:  u=rw,g=r,o=r

# FIXME FLAKY Looks like my lazy trick will not work for 12.2.0.1
# http://www.dba-oracle.com/t_create_tnsnames_ora.htm
# Created by listner script, but this is where I would think to look for this
- name: Copy server tnsames.ora to local for later use on Documentum servers
  fetch:
    dest:  "{{ tmp_dir }}/tnsnames.ora"
    src:   "{{ oracle.home }}/network/admin/tnsnames.ora"
    flat: yes
#  when: oracle.version == "12.1.0.2"
